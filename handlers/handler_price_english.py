import logging

from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text

from config import subject_buttons


async def tasks_english(message: types.Message):
    try:

        await message.answer(
            '–ü—Ä–∏–≤—ñ—Ç!üëã –ú–∏ –ø–æ–∫–∞ —â–æ –Ω–µ –∑—ñ–π—à–ª–∏—Å—å –Ω–∞ –æ–¥–Ω—ñ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ–π —Ü—ñ–Ω—ñ, '
            f'—Ç–æ–º—É –ø—ñ—Å–ª—è —Ç–æ–≥–æ —è–∫ –≤–∏ –∑–∞–∫–∞–∑–∞–ª–∏ –∑–≤\'—è–∂—ñ—Ç—å—Å—è –∑ {man1.user.mention} –∞–±–æ {man2.user.mention}, —â–æ–± –æ–≥–æ–≤–æ—Ä–∏—Ç–∏ —Ü—ñ–Ω—É. –î—è–∫—É—î–º–æ! üòä',
            reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
        )
    except Exception as e:
        logging.exception(e)


def register_message_handler_english(dp: Dispatcher):
    try:
        dp.register_message_handler(tasks_english, Text(equals=subject_buttons[3]))
    except Exception as e:
        logging.exception(e)
