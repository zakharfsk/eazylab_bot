import logging

from aiogram import Dispatcher, types
from aiogram.dispatcher.filters import Text


async def informations(message: types.Message):
    try:
        await message.answer(
            '–ü—Ä–∏–≤—ñ—Ç –º–∏ —Ä–∞–¥—ñ, —â–æ –≤–∏ –∫–æ—Ä–∏—Å—Ç—É—î—Ç–µ—Å—è –Ω–∞—à–∏–º –±–æ—Ç–æ–º. ü•∞\n'
            '–¶—å–æ–≥–æ –±–æ—Ç–∞ –π —ñ–¥–µ—é —Ä–æ–∑—Ä–æ–±–∏–ª–∏ –¥–≤–æ—î —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤, —è–∫–∏–º –∑–∞–≤–∂–¥–∏ –Ω–µ —Ö–≤–∞—Ç–∞–ª–æ –Ω–∞ –∫–∞–≤—É ^^\n\n'
            f'–†–æ–∑–æ–±–Ω–∏–∫ –±–æ—Ç–∞ - Holo4ka.\n'
            f'–î–æ–ø–æ–º—ñ–≥ –∑ —Ä–æ–∑–≤–∏—Ç–∫–æ–º —ñ–¥–µ—ó - Fisvif.'
        )

    except Exception as e:
        logging.exception(e)


def register_handlers_informations(dp: Dispatcher):
    try:
        dp.register_message_handler(informations, Text(equals='‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è'))
    except Exception as e:
        logging.exception(e)
