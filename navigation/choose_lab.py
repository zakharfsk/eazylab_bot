from aiogram import Dispatcher
from aiogram.dispatcher.filters import Text

from create_keyboards.keyboards import *


async def lab_for_prog(message: types.Message):
    try:
        await message.answer(
            '–Ø–∫—É –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É —Ä–æ–±–æ—Ç—É –±–∞–∂–∞—î –º—ñ–π —à–∞–Ω–æ–≤–Ω–∏–π –ø–∞–Ω, —â–æ–± —è –∑–∞ –Ω—å–æ–≥–æ —ó—ó –≤–∏–∫–æ–Ω–∞–ª–∞. üòò',
            reply_markup=labaratories_keyboard().add('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
        )

    except Exception as e:
        logging.exception(e)


async def lab_for_it(message: types.Message):
    try:
        await message.answer(
            '–Ø–∫—É –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É —Ä–æ–±–æ—Ç—É –±–∞–∂–∞—î –º—ñ–π —à–∞–Ω–æ–≤–Ω–∏–π –ø–∞–Ω, —â–æ–± —è –∑–∞ –Ω—å–æ–≥–æ —ó—ó –≤–∏–∫–æ–Ω–∞–ª–∞. üòò',
            reply_markup=it_keyboard().add('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
        )

    except Exception as e:
        logging.exception(e)


async def idz_hight_math(message: types.Message):
    try:
        await message.answer(
            '–Ø–∫—É –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É —Ä–æ–±–æ—Ç—É –±–∞–∂–∞—î –º—ñ–π —à–∞–Ω–æ–≤–Ω–∏–π –ø–∞–Ω, —â–æ–± —è –∑–∞ –Ω—å–æ–≥–æ —ó—ó –≤–∏–∫–æ–Ω–∞–ª–∞. üòò',
            reply_markup=idz_hight_math_keyboard().add('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
        )
    except Exception as e:
        logging.exception(e)


async def web_tehnology(message: types.Message):
    try:
        await message.answer(
            '–Ø–∫—É –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É —Ä–æ–±–æ—Ç—É –±–∞–∂–∞—î –º—ñ–π —à–∞–Ω–æ–≤–Ω–∏–π –ø–∞–Ω, —â–æ–± —è –∑–∞ –Ω—å–æ–≥–æ —ó—ó –≤–∏–∫–æ–Ω–∞–ª–∞. üòò',
            reply_markup=web_keyboard().add('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
        )
    except Exception as e:
        logging.exception(e)


def register_handlers_choose_lab(dp: Dispatcher):
    try:
        dp.register_message_handler(lab_for_prog, Text(equals='–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ñ –∑ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è'))
        dp.register_message_handler(lab_for_it, Text(equals='–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ñ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π'))
        dp.register_message_handler(idz_hight_math, Text(equals='–í–∏—â–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞'))
        dp.register_message_handler(web_tehnology, Text(equals='Web –¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó'))
    except Exception as e:
        logging.exception(e)
